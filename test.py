import unittest
import travis_encrypt

from base64 import b64decode

import Crypto
from Crypto.PublicKey import RSA
from Crypto.Cipher import PKCS1_v1_5

# Keys generated by http://travistidwell.com/jsencrypt/demo/

TEST_PUBLIC_KEY = """-----BEGIN PUBLIC KEY-----
MIIBITANBgkqhkiG9w0BAQEFAAOCAQ4AMIIBCQKCAQBkFRdngpZ/IBueZ2e+P6XS
a2uiifaEP3jw8tVU9BFObP9AH/y5mQKixE741/EFMj0Sp/+SLQFgW3o5agjVEJCL
8qPdG6CzkGp6p32haSL7weMVTuCHRosT5r2BqpEvilrmqRThRnfJyyMw2KGbLNrq
3sxBeUXGWHHU4eMpxY3vyivszMbsrkWe7yw2x1Tly1vaihidtuLXV+Fi7UuP+SSa
+yFw/01Drwjqj834CfiyUa/7IjlU2hcofeJWcWOc12rSWmK1xMUAVPAce4onQM2i
gw2KYCrqQZcQGGp+TTlF2cbAmI1/rIP48toXUbtzW8wC0u8DG3qbDNirBE9rBmZH
AgMBAAE=
-----END PUBLIC KEY-----"""

TEST_PRIVATE_KEY = """-----BEGIN RSA PRIVATE KEY-----
MIIEoQIBAAKCAQBkFRdngpZ/IBueZ2e+P6XSa2uiifaEP3jw8tVU9BFObP9AH/y5
mQKixE741/EFMj0Sp/+SLQFgW3o5agjVEJCL8qPdG6CzkGp6p32haSL7weMVTuCH
RosT5r2BqpEvilrmqRThRnfJyyMw2KGbLNrq3sxBeUXGWHHU4eMpxY3vyivszMbs
rkWe7yw2x1Tly1vaihidtuLXV+Fi7UuP+SSa+yFw/01Drwjqj834CfiyUa/7IjlU
2hcofeJWcWOc12rSWmK1xMUAVPAce4onQM2igw2KYCrqQZcQGGp+TTlF2cbAmI1/
rIP48toXUbtzW8wC0u8DG3qbDNirBE9rBmZHAgMBAAECggEAGFhhFxbXERl4XnH8
9HR7G9Jxnlo9EzJ1cvc/Gak9RHyTIsAlM+iakYl7RGETChaMcKtZKe+0tAHMm4bF
mz6qSsC9R53e2483t5pinw76KY+ic556U62/SxoH4zDgnFXlgtKCd8IyhW3ao5ku
xpaEsjl8Kjkb1gHRvt0r6w9ZVYjkbfzg/7sAq6aTXjckv0mOw2LPFUlDKxTNbl3y
6H1GdSPxOL44TEL2P6SNMxbsiqKZKsJaxHLFrTTddThUCfpi3GJmObs+qSifTNgI
t6ZUhuTQkg2U6GSH+IcI6LqROyEumf8sUFwgwp4sIp1Avms3GmOymlZ9lQBOGIoK
G8VMIQKBgQCnirLjuX8t3FzMmq3rU85m0qWw8OX1KIEJMXrHtb6eI/BjJrVWRylu
U2aMr66devAaCmi8ggDQxbueV8N5MuPYAgbPZUaTjVB9ai3qMsGjrbXCOL9/ywtN
PfBMjQRkEnV55LlIkDbNJb13SLvP8A6lbzu+O+yIe+BLIRSyERaLLwKBgQCY7HAK
PmR++MOn5CDQ2YniGV7TQ3f9o6nG5U8qoEFqQpbkwTFhBvCC4Pvkoe11uC6OTpOQ
0btnmDEe7l4eRufWaA5rQ12nJkVIoe894Gg63Kk0NpVIp0QoJVqtYNVPiX1CTkZC
+9mDll10hcmbCM9bvE0lcL2Te5teeYW3ZpmwaQKBgCgHYVo7NYGVhq5zvl3dNhEm
/uNZiveZ58p0ges5JwPNfl+SHf0xH1r2nie6ybNibf8qwX9YaC15MKxSN6e7Wuh/
A3WFsukJ+FMejT3JRq5+kFCJEmfL8TVRORpxDr2CE4M9/G6z1gQJokzfmc/CgR1R
iCqZUpgBUMNicflhT8uNAoGARALrtXKYSWwjwFiSS7BkRV1ZMgZQqEqQqHe1pNSP
I04oQ+a0Kl3mu56KCN4HeRKIChxiPsc4XNNwDTygOUD5vP6cYxIb5cn8iFgUyeUz
FfKrgiBAdoaFpoEueeuWEwCn58ReNU5DJ+XI/Ji/2Car6jWt7dfdSGlx6SuMz8te
0PkCgYA6+b11TFh3Qh0sDv5bNr0dAzqErZsUt6eKqET2lcvB2zNgeYT4r0XS1xIP
poxtMfxiD5nd2D4bxUQJ2yyzAhNciHNrCOISDbrKO9Kqn3fC4526qD7vM4sIHdQi
AvrkRVHPeyGlZzgGxL7nqx8/IR8pAZBuN/dDDTeidgm6PjHa8Q==
-----END RSA PRIVATE KEY-----"""


def decrypt(encrypted):
    private_key = RSA.importKey(TEST_PRIVATE_KEY)
    cipher = PKCS1_v1_5.new(private_key)
    sentinel = ""
    return cipher.decrypt(b64decode(encrypted), sentinel)

class TestEncrypt(unittest.TestCase):


    def test_get_public_key(self):
        account = "hopsmdev"
        project = "data_fetcher"
        public_key = travis_encrypt.get_public_key(account, project)
        self.assertIn("-----BEGIN PUBLIC KEY-----", public_key)
        self.assertIn("-----END PUBLIC KEY-----", public_key)

    def test_get_cipher(self):
        cipher = travis_encrypt.get_cipher(TEST_PUBLIC_KEY)
        self.assertIsInstance(cipher, Crypto.Cipher.PKCS1_v1_5.PKCS115_Cipher)

    def test_encrypt(self):
        cipher = travis_encrypt.get_cipher(TEST_PUBLIC_KEY)
        env = "PARAM1=PASSWORD"

        encrypted = travis_encrypt.encrypt(cipher, env)
        decrypted = (decrypt(encrypted)).decode('utf-8')

        self.assertEqual(env, decrypted)



if __name__ == "__main__":
    unittest.main()
